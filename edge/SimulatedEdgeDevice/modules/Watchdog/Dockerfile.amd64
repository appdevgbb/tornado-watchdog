# Multi-stage Docker build files,
# First stage creats a Docker image to compile the code
# Second stage takes only what is necessary to run the code
# resulting in a much smaller production image (removes build artifacts)

#First stage - Build/Compile
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build-env

# Copy csproj files and restore dependencies
WORKDIR /app/edge/SimulatedEdgeDevice/modules/Watchdog
COPY shared/HeartbeatMessage/HeartbeatMessage.csproj /app/shared/HeartbeatMessage/
COPY edge/SimulatedEdgeDevice/modules/Watchdog/Watchdog.csproj ./
RUN dotnet restore

# Copy and build source files
COPY shared/HeartbeatMessage/* /app/shared/HeartbeatMessage/
COPY edge/SimulatedEdgeDevice/modules/Watchdog/* ./
RUN dotnet publish -c Release -o /app/out

# Second stage - Production Image
# Copy binaries to new image
FROM mcr.microsoft.com/dotnet/runtime:6.0
WORKDIR /app
COPY --from=build-env /app/out ./

RUN useradd -ms /bin/bash moduleuser
USER moduleuser

ENTRYPOINT ["dotnet", "Watchdog.dll"]